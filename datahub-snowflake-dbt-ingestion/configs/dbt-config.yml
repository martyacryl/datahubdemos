# DataHub dbt Ingestion Configuration
# For DataHub Open Source (localhost:8080)
# Based on official DataHub documentation: https://docs.datahub.com/docs/generated/ingestion/sources/dbt

source:
  type: dbt
  config:
    # ================================================
    # DBT ARTIFACTS PATHS
    # ================================================
    # Local dbt project artifacts (generated by dbt compile/docs generate/run)
    manifest_path: "${DBT_PROJECT_ROOT}/target/manifest.json"    # Required: Model definitions and lineage
    catalog_path: "${DBT_PROJECT_ROOT}/target/catalog.json"      # Required: Schema information
    sources_path: "${DBT_PROJECT_ROOT}/target/sources.json"     # Optional: Freshness information
    run_results_path: "${DBT_PROJECT_ROOT}/target/run_results.json"  # Optional: Test results
    
    # Alternative: dbt Cloud configuration (uncomment if using dbt Cloud)
    # dbt_cloud_url: "https://cloud.getdbt.com"
    # dbt_cloud_auth_token: "${DBT_CLOUD_TOKEN}"
    # dbt_cloud_account_id: "${DBT_CLOUD_ACCOUNT_ID}"
    # dbt_cloud_project_id: "${DBT_CLOUD_PROJECT_ID}"
    # dbt_cloud_job_id: "${DBT_CLOUD_JOB_ID}"        # Optional: specific job
    
    # ================================================
    # PLATFORM MAPPING
    # ================================================
    # CRITICAL: Must match your data warehouse platform
    target_platform: "snowflake"        # Should match Snowflake ingestion
    
    # Platform instance (useful for multi-environment setups)
    platform_instance: "prod"           # Should match Snowflake platform_instance
    
    # Environment classification  
    env: "PROD"                         # PROD, DEV, STAGING, etc.
    
    # ================================================
    # ENTITY INCLUSION/EXCLUSION
    # ================================================
    # Control which dbt node types to include
    node_type_pattern:
      allow:
        - "model"                       # dbt models
        - "source"                      # dbt sources  
        - "test"                        # dbt tests
        - "seed"                        # dbt seeds
        - "snapshot"                    # dbt snapshots
      # deny:
      #   - "analysis"                  # Skip analysis files
    
    # Control which dbt nodes to include by name
    # node_name_pattern:
    #   allow:
    #     - "marts.*"                   # Only marts models
    #     - "staging.*"                 # Only staging models
    #   deny:
    #     - ".*_temp"                   # Skip temporary models
    #     - ".*_backup"                 # Skip backup models
    
    # ================================================
    # METADATA EXTRACTION OPTIONS
    # ================================================
    # Code and compilation
    include_compiled_code: true          # Include compiled SQL in metadata
    load_schemas: true                   # Load schema information from catalog
    infer_dbt_schemas: true             # Infer schemas from dbt definitions
    
    # dbt-specific metadata
    include_dbt_meta: true              # Include dbt meta properties
    include_dbt_tags: true              # Include dbt tags
    write_semantics: true               # Include semantic information
    
    # Documentation and descriptions
    include_description: true           # Include model descriptions
    include_freshness: true             # Include source freshness information
    
    # ================================================
    # LINEAGE CONFIGURATION
    # ================================================
    # Column-level lineage (requires additional processing)
    include_column_lineage: true        # Extract column-level relationships
    
    # Skip source nodes in lineage (useful for complex multi-project setups)
    skip_sources_in_lineage: false     # Set to true to simplify lineage graphs
    
    # Enable upstream lineage extraction
    include_upstream_lineage: true
    
    # ================================================
    # TEST RESULTS AND DATA QUALITY
    # ================================================
    # Test execution results
    include_test_results: true          # Include dbt test outcomes
    test_warnings_are_errors: false    # Treat warnings as failures
    
    # Asset health monitoring
    include_asset_health: true
    
    # ================================================
    # ADVANCED CONFIGURATION
    # ================================================
    # Entity filtering for complex setups
    entities_enabled:
      models: true
      sources: true                     # Set to false if you want to skip source entities
      seeds: true
      snapshots: true
      tests: true
    
    # Case sensitivity options
    convert_column_urns_to_lowercase: true    # Recommended for Snowflake compatibility
    
    # Target schema override (if different from dbt target)
    # target_schema: "analytics"
    
    # Custom asset naming
    # asset_name_suffix: "_dbt"         # Add suffix to distinguish dbt assets
    
    # ================================================
    # META PROPERTY MAPPING
    # ================================================
    # Map dbt meta properties to DataHub concepts
    meta_mapping:
      # Map dbt meta.owner to DataHub ownership
      "owner": "datahub.owner"
      
      # Map dbt meta.tier to DataHub tags
      "tier": "datahub.tag"
      
      # Map dbt meta.domain to DataHub domain
      "domain": "datahub.domain"
      
      # Map custom business properties
      "business_owner": "business_owner"
      "data_classification": "classification"
      "criticality": "tier"
    
    # ================================================
    # TAG PROCESSING
    # ================================================
    # Automatic tagging based on dbt properties
    tag_prefix: "dbt:"                  # Prefix for all dbt tags
    
    # Auto-tag based on model characteristics
    enable_meta_mapping: true
    strip_user_ids_from_email: true
    
    # ================================================
    # GIT INTEGRATION (Optional)
    # ================================================
    # Link to source code in git repository
    # git_info:
    #   repo: "github.com/yourorg/your-dbt-repo"
    #   url_template: "{repo_url}/blob/{branch}/{file_path}"
    #   branch: "main"
    
    # ================================================
    # MULTIPLE PROJECTS (if applicable)
    # ================================================
    # For dbt mesh or multi-project setups, ensure each project has:
    # - Unique platform_instance
    # - Consistent target_platform
    # - Appropriate entity filtering
    
# ================================================
# OUTPUT CONFIGURATION  
# ================================================
sink:
  type: datahub-rest
  config:
    server: "http://localhost:8080"
    # Uncomment if DataHub has authentication enabled
    # token: "${DATAHUB_TOKEN}"
    
    # Connection settings
    timeout_sec: 30
    retry_max_times: 3
    
    # Advanced sink options
    mode: "UPSERT"                      # Options: UPSERT, OVERWRITE

# ================================================
# REPORTING AND MONITORING
# ================================================
reporting:
  - type: console
    config:
      # Print detailed progress to console
      level: INFO
      
  # Uncomment to save ingestion report to file
  # - type: file
  #   config:
  #     filename: "dbt-ingestion-report.json"
